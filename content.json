{"meta":{"title":"CoderPwp","subtitle":"(*´▽｀)ノノ泥嚎，我是一只喷雾瓶！","description":"一名普通大学生的博客","author":"CoderPwp","url":"http://pwp.ink","root":"/"},"pages":[{"title":"404 Not Found：该页面似乎损坏","date":"2020-07-21T04:36:24.181Z","updated":"2020-07-21T04:36:24.174Z","comments":false,"path":"404.html","permalink":"http://pwp.ink/404.html","excerpt":"","text":""},{"title":"关于","date":"2020-07-16T20:57:10.000Z","updated":"2020-07-20T14:26:19.899Z","comments":true,"path":"about/index.html","permalink":"http://pwp.ink/about/index.html","excerpt":"","text":"@timeline{ 2018 年@item{ 未知の日我遗失了大部分记忆… } @item{ 09 月 07 日考入佛山大学，机电工程学院机械设计制造及自动化专业 } 2019 年@item{ 01 月 08 日我搭建了 PentestBox 的中文镜像站，p4st0r.org (已经失效 } @item{ 02 月 13 日我使用开源社区程序 Flarum 创建了 zhuran.org (助燃社区) } @item{ 03 月 07 日我的 Hexo 博客由 Archer 主题更换为 Indigo，同一天我注册了pwp.ink域名 } @item{ 03 月 10 日养了一只吞噬兽🐱，名字叫Rocket🚀，正式成为一名铲屎官。 } @item{ 11 月 01 日转专业至数学与大数据学院，数据科学与大数据技术专业 } }"},{"title":"目录","date":"2020-07-16T16:47:53.000Z","updated":"2020-07-16T13:44:38.654Z","comments":false,"path":"categories/index.html","permalink":"http://pwp.ink/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-07-16T16:47:43.000Z","updated":"2020-07-16T13:44:22.913Z","comments":false,"path":"tags/index.html","permalink":"http://pwp.ink/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"提示：'git push --help' 中的 'Note about fast-forwards' 小节。","slug":"提示：更新被拒绝，因为您当前分支的最新提交落后于其对应的远程分支","date":"2020-07-28T13:02:38.000Z","updated":"2020-07-28T12:50:44.649Z","comments":true,"path":"2020/07/28/提示：更新被拒绝，因为您当前分支的最新提交落后于其对应的远程分支/","link":"","permalink":"http://pwp.ink/2020/07/28/%E6%8F%90%E7%A4%BA%EF%BC%9A%E6%9B%B4%E6%96%B0%E8%A2%AB%E6%8B%92%E7%BB%9D%EF%BC%8C%E5%9B%A0%E4%B8%BA%E6%82%A8%E5%BD%93%E5%89%8D%E5%88%86%E6%94%AF%E7%9A%84%E6%9C%80%E6%96%B0%E6%8F%90%E4%BA%A4%E8%90%BD%E5%90%8E%E4%BA%8E%E5%85%B6%E5%AF%B9%E5%BA%94%E7%9A%84%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF/","excerpt":"本文关于解决如述 Git 上传问题及分析问题出现原因，且提供了两个解决方案来以此应对。","text":"本文关于解决如述 Git 上传问题及分析问题出现原因，且提供了两个解决方案来以此应对。 推荐方案 思路：先拉取远程仓库的代码文件到本地进行合并后，再推送到远程仓库优点：可以不干扰到他人的Commit logs(提交记录) 方案123git fetch origin master &#x2F;&#x2F; 下载远程 origin(起源) 仓库的 master(主) 分支到本地(假设你有多条分支在远程仓库上git merge origin&#x2F;master &#x2F;&#x2F; 假设你在本地 master 分支上，合并远程的 origin&#x2F;master 分支git push origin master &#x2F;&#x2F; 成功运行前两条，就可以顺利推送到远程仓库主分支了 fatal: 拒绝合并无关的历史 … 12git pull origin master --allow-unrelated-histories &#x2F;&#x2F; 允许拉取无关历史的远程仓库主分支文件到本地，并进行合并git push origin master &#x2F;&#x2F; 成功运行，就可以顺利推送到远程仓库主分支了 如果你担心，合并会不会覆盖掉我的一些文件或代码，那你需要了解以下知识[1] git分支合并把代码覆盖的问题 激进方案 使用自己本地仓库强制推送到远程仓库，若有重复的文件，将会使得本地文件强制覆盖远程文件，这将会导致你远程仓库上**其他人的提交记录(Commit logs)也全被覆盖清空。 方案1git push -f gitee master 强制推送 注意 推送后果 后果 如图，近 7 天里本来是有其他成员的提交记录，现在已经分支已经砍掉别人的记录，然后从我上一个提交记录开始接上[2]。 提交覆盖 分析原因模拟情景 你的项目是多人(或多设备)协作的，当你的团队成员(或其他设备)提交了新的文件代码，上传到(如) Gitee 平台 的远程仓库 hexo_Cache 的 master 主分支上，而你并没有选择先进行拉取合并其他人提交的工作，而选择直接上传你的到远程仓库分支上，就会出现如下报错： Gitee 平台提交报错 为此我特地尝试在我的另一台设备 Surface 上，提交一个测试文件到 Gitee 平台 的远程仓库 hexo_Cache 的 master 主分支上，然后在我另一台设备 Mibook 尝试直接上传，发现情况属实出现报错。而我选择上传到 GitHub 平台 的远程仓库 Origin 的 master 主分支上时，则显示成功上传（那是因为我事先并未在 GitHub 上有上传其他新的 (已提交的) 东西： GitHub 平台提交成功 参考链接1. OSCHINA - git分支合并把代码覆盖的问题？,malle0 ,彩阳 2. 百度经验 - GIT学习–(19) Git操作禁忌之git push -f, 爱做菜的技术宅","categories":[{"name":"日常小麻烦","slug":"日常小麻烦","permalink":"http://pwp.ink/categories/%E6%97%A5%E5%B8%B8%E5%B0%8F%E9%BA%BB%E7%83%A6/"}],"tags":[{"name":"提示：更新被拒绝，因为您当前分支...","slug":"提示：更新被拒绝，因为您当前分支","permalink":"http://pwp.ink/tags/%E6%8F%90%E7%A4%BA%EF%BC%9A%E6%9B%B4%E6%96%B0%E8%A2%AB%E6%8B%92%E7%BB%9D%EF%BC%8C%E5%9B%A0%E4%B8%BA%E6%82%A8%E5%BD%93%E5%89%8D%E5%88%86%E6%94%AF/"},{"name":"提示：再次推送前，先与远程变更合...","slug":"提示：再次推送前，先与远程变更合","permalink":"http://pwp.ink/tags/%E6%8F%90%E7%A4%BA%EF%BC%9A%E5%86%8D%E6%AC%A1%E6%8E%A8%E9%80%81%E5%89%8D%EF%BC%8C%E5%85%88%E4%B8%8E%E8%BF%9C%E7%A8%8B%E5%8F%98%E6%9B%B4%E5%90%88/"},{"name":"详见，提示：'git push —help’...","slug":"详见，提示：-git-push-—help’","permalink":"http://pwp.ink/tags/%E8%AF%A6%E8%A7%81%EF%BC%8C%E6%8F%90%E7%A4%BA%EF%BC%9A-git-push-%E2%80%94help%E2%80%99/"}]},{"title":"(原创) OpenCV3实现图像伪素描","slug":"OpenCV3实现图像伪素描","date":"2019-12-03T21:46:13.000Z","updated":"2020-07-28T13:58:49.779Z","comments":true,"path":"2019/12/04/OpenCV3实现图像伪素描/","link":"","permalink":"http://pwp.ink/2019/12/04/OpenCV3%E5%AE%9E%E7%8E%B0%E5%9B%BE%E5%83%8F%E4%BC%AA%E7%B4%A0%E6%8F%8F/","excerpt":"原标题《用Python做个海量小姐姐素描图》[1]，本文只介绍如何实现素描风格并贴出具体代码。","text":"原标题《用Python做个海量小姐姐素描图》[1]，本文只介绍如何实现素描风格并贴出具体代码。 背景介绍 今天刷手机看到微信公众号上这篇文章，感觉蛮有意思的，里面贴出了大致思路和相关的OpenCV2片段代码。然后秉着好奇的心就想来试试看，没想到真的成功啦，下面就直接贴出效果图和具体代码，注释做分析。 原图素材 原图 漫画风格 漫画 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051&#x2F;&#x2F;代码思路：彩色原图 &gt; 转化为灰度图 &gt; 均值滤波模糊处理 &gt; 自适应二值化为白底黑图#include &lt;iostream&gt;#include &lt;opencv2&#x2F;core&#x2F;core.hpp&gt;#include &lt;opencv2&#x2F;highgui&#x2F;highgui.hpp&gt;#include &lt;opencv2&#x2F;imgproc&#x2F;imgproc.hpp&gt;using namespace std;using namespace cv;int main()&#123; Mat srcImage &#x3D; imread(&quot;1.jpeg&quot;); if (!srcImage.data) &#123; cout &lt;&lt; &quot;读取图片错误，请重新输入正确路径！\\n&quot;; system(&quot;pause&quot;); return -1; &#125; imshow(&quot;ORIGINAL&quot;, srcImage); Mat srcGray; cvtColor(srcImage, srcGray, CV_RGB2GRAY); imshow(&quot;GRAY&quot;, srcGray); Mat tempImage; medianBlur(srcGray,tempImage,5); const int maxVal &#x3D; 255; &#x2F;&#x2F;初始化参数 int blockSize &#x3D; 3; &#x2F;&#x2F;取值3、5、7....等 int constValue &#x3D; 2; int adaptiveMethod &#x3D; 0; int thresholdType &#x3D; 0; &#x2F;* 自适应阈值算法 0:ADAPTIVE_THRESH_MEAN_C 1:ADAPTIVE_THRESH_GAUSSIAN_C -------------------------------------- 阈值类型 0:THRESH_BINARY 1:THRESH_BINARY_INV *&#x2F; Mat adapImage; adaptiveThreshold(tempImage, adapImage, maxVal, adaptiveMethod, thresholdType, blockSize, constValue); imshow(&quot;ADDAPTIVE&quot;, adapImage); imwrite(&quot;adap.jpeg&quot;,adapImage); waitKey(0); return 0;&#125; 写实风格 写实 12345678910111213141516171819202122232425262728293031&#x2F;&#x2F;代码思路：彩色原图 &gt; 转化为灰度图 &gt; 高斯滤波模糊处理 &gt; 灰度图与高斯图做个简单的减法#include &lt;iostream&gt;#include &lt;opencv2&#x2F;core&#x2F;core.hpp&gt;#include &lt;opencv2&#x2F;highgui&#x2F;highgui.hpp&gt;#include &lt;opencv2&#x2F;imgproc&#x2F;imgproc.hpp&gt;using namespace std;using namespace cv;int main()&#123; Mat srcImage &#x3D; imread(&quot;1.jpeg&quot;); &#x2F;&#x2F;载入图像 imshow(&quot;ORIGINAL&quot;,srcImage); Mat grayImage; cvtColor(srcImage, grayImage, CV_RGB2GRAY); imshow(&quot;GRAY&quot;,grayImage); Mat gaussImage; GaussianBlur(grayImage,gaussImage,Size(21,21),0,0); imshow(&quot;GAUSS&quot;,gaussImage); Mat dstImage; divide(grayImage,gaussImage,dstImage,255,-1); imshow(&quot;DST&quot;,dstImage); imwrite(&quot;DST.jpeg&quot;,dstImage); waitKey(0); return 0;&#125; 成功复现 成功 参考链接1. 用 Python 做个海量小姐姐素描图","categories":[{"name":"原创","slug":"原创","permalink":"http://pwp.ink/categories/%E5%8E%9F%E5%88%9B/"}],"tags":[{"name":"菜鸟学 Python，原作者大刘","slug":"菜鸟学-Python，原作者大刘","permalink":"http://pwp.ink/tags/%E8%8F%9C%E9%B8%9F%E5%AD%A6-Python%EF%BC%8C%E5%8E%9F%E4%BD%9C%E8%80%85%E5%A4%A7%E5%88%98/"},{"name":"OpenCV3，代码原创","slug":"OpenCV3，代码原创","permalink":"http://pwp.ink/tags/OpenCV3%EF%BC%8C%E4%BB%A3%E7%A0%81%E5%8E%9F%E5%88%9B/"},{"name":"均值滤波","slug":"均值滤波","permalink":"http://pwp.ink/tags/%E5%9D%87%E5%80%BC%E6%BB%A4%E6%B3%A2/"},{"name":"高斯滤波","slug":"高斯滤波","permalink":"http://pwp.ink/tags/%E9%AB%98%E6%96%AF%E6%BB%A4%E6%B3%A2/"},{"name":"自适应阈值化","slug":"自适应阈值化","permalink":"http://pwp.ink/tags/%E8%87%AA%E9%80%82%E5%BA%94%E9%98%88%E5%80%BC%E5%8C%96/"}]}],"categories":[{"name":"日常小麻烦","slug":"日常小麻烦","permalink":"http://pwp.ink/categories/%E6%97%A5%E5%B8%B8%E5%B0%8F%E9%BA%BB%E7%83%A6/"},{"name":"原创","slug":"原创","permalink":"http://pwp.ink/categories/%E5%8E%9F%E5%88%9B/"}],"tags":[{"name":"提示：更新被拒绝，因为您当前分支...","slug":"提示：更新被拒绝，因为您当前分支","permalink":"http://pwp.ink/tags/%E6%8F%90%E7%A4%BA%EF%BC%9A%E6%9B%B4%E6%96%B0%E8%A2%AB%E6%8B%92%E7%BB%9D%EF%BC%8C%E5%9B%A0%E4%B8%BA%E6%82%A8%E5%BD%93%E5%89%8D%E5%88%86%E6%94%AF/"},{"name":"提示：再次推送前，先与远程变更合...","slug":"提示：再次推送前，先与远程变更合","permalink":"http://pwp.ink/tags/%E6%8F%90%E7%A4%BA%EF%BC%9A%E5%86%8D%E6%AC%A1%E6%8E%A8%E9%80%81%E5%89%8D%EF%BC%8C%E5%85%88%E4%B8%8E%E8%BF%9C%E7%A8%8B%E5%8F%98%E6%9B%B4%E5%90%88/"},{"name":"详见，提示：'git push —help’...","slug":"详见，提示：-git-push-—help’","permalink":"http://pwp.ink/tags/%E8%AF%A6%E8%A7%81%EF%BC%8C%E6%8F%90%E7%A4%BA%EF%BC%9A-git-push-%E2%80%94help%E2%80%99/"},{"name":"菜鸟学 Python，原作者大刘","slug":"菜鸟学-Python，原作者大刘","permalink":"http://pwp.ink/tags/%E8%8F%9C%E9%B8%9F%E5%AD%A6-Python%EF%BC%8C%E5%8E%9F%E4%BD%9C%E8%80%85%E5%A4%A7%E5%88%98/"},{"name":"OpenCV3，代码原创","slug":"OpenCV3，代码原创","permalink":"http://pwp.ink/tags/OpenCV3%EF%BC%8C%E4%BB%A3%E7%A0%81%E5%8E%9F%E5%88%9B/"},{"name":"均值滤波","slug":"均值滤波","permalink":"http://pwp.ink/tags/%E5%9D%87%E5%80%BC%E6%BB%A4%E6%B3%A2/"},{"name":"高斯滤波","slug":"高斯滤波","permalink":"http://pwp.ink/tags/%E9%AB%98%E6%96%AF%E6%BB%A4%E6%B3%A2/"},{"name":"自适应阈值化","slug":"自适应阈值化","permalink":"http://pwp.ink/tags/%E8%87%AA%E9%80%82%E5%BA%94%E9%98%88%E5%80%BC%E5%8C%96/"}]}